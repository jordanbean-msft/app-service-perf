name: BuildRelease
variables:
  - template: environments/global.yml
  - template: environments/dev.yml
  - template: environments/test.yml
  - template: environments/prod.yml
trigger:
  - main
stages:
  - stage: Build
    jobs:
      - job: Build
        pool:
          vmImage: ubuntu-latest
        steps:
          - template: build.yml
            parameters:
              artifactName: ${{ variables.artifactName }}
              configuration: ${{ variables.configuration }}
              pathToWebAppProjectDirectory: ${{ variables.pathToWebAppProjectDirectory }}
              webAppProjectName: ${{ variables.webAppProjectName }}

  - stage: Dev
    dependsOn: Build
    jobs:
    - deployment: Dev_Deploy
      pool:
        vmImage: ubuntu-latest
      environment: ${{ variables.devEnvironmentName }}
      strategy:
        runOnce:
          deploy:
            steps:
            - template: deploy.yml
              parameters:
                artifactName: ${{ variables.artifactName }}
                backendAzureRmContainerName: ${{ variables.backendAzureRmContainerName}}
                backendAzureRmKey: ${{ variables.backendAzureRmKey }}
                backendAzureRmResourceGroupName: ${{ variables.backendAzureRmResourceGroupName }}
                backendAzureRmStorageAccountName: ${{ variables.backendAzureRmStorageAccountName }}
                environmentName: ${{ variables.devEnvironmentName }}
                globalTerraformVariableFilename: ${{ variables.globalTerraformVariableFilename }}
                pathToTerraformDirectory: ${{ variables.pathToTerraformDirectory }}
                pathToTerraformVariableDirectory: ${{ variables.pathToTerraformVariableDirectory }}
                serviceConnectionName: ${{ variables.serviceConnectionName }}
                webAppProjectName: ${{ variables.webAppProjectName }}
    - job: waitForValidation
      displayName: Wait for validation
      dependsOn: Dev_Deploy
      pool: server
      timeoutInMinutes: 4320 # job times out in 3 days
      steps:
      - task: ManualValidation@0
        timeoutInMinutes: 1440 # task times out in 1 day
        inputs:
          instructions: 'Please validate the deployment and resume'
          onTimeout: reject
  - stage: Test
    dependsOn: Dev
    jobs:
    - deployment: Test_Deploy
      pool:
        vmImage: ubuntu-latest
      environment: ${{ variables.testEnvironmentName }}
      strategy:
        runOnce:
          deploy:
            steps:
            - template: deploy.yml
              parameters:
                artifactName: ${{ variables.artifactName }}
                backendAzureRmContainerName: ${{ variables.backendAzureRmContainerName}}
                backendAzureRmKey: ${{ variables.backendAzureRmKey }}
                backendAzureRmResourceGroupName: ${{ variables.backendAzureRmResourceGroupName }}
                backendAzureRmStorageAccountName: ${{ variables.backendAzureRmStorageAccountName }}
                environmentName: ${{ variables.testEnvironmentName }}
                globalTerraformVariableFilename: ${{ variables.globalTerraformVariableFilename }}
                pathToTerraformDirectory: ${{ variables.pathToTerraformDirectory }}
                pathToTerraformVariableDirectory: ${{ variables.pathToTerraformVariableDirectory }}
                serviceConnectionName: ${{ variables.serviceConnectionName }}
                webAppProjectName: ${{ variables.webAppProjectName }}
    - job: waitForValidation
      displayName: Wait for validation
      dependsOn: Test_Deploy
      condition: false
      pool: server
      timeoutInMinutes: 4320 # job times out in 3 days
      steps:
      - task: ManualValidation@0
        timeoutInMinutes: 1440 # task times out in 1 day
        inputs:
          instructions: 'Please validate the deployment and resume'
          onTimeout: reject
  - stage: Prod
    dependsOn: Test
    jobs:
    - deployment: Prod_Deploy
      pool:
        vmImage: ubuntu-latest
      environment: ${{ variables.prodEnvironmentName }}
      strategy:
        runOnce:
          deploy:
            steps:
            - template: deploy.yml
              parameters:
                artifactName: ${{ variables.artifactName }}
                backendAzureRmContainerName: ${{ variables.backendAzureRmContainerName}}
                backendAzureRmKey: ${{ variables.backendAzureRmKey }}
                backendAzureRmResourceGroupName: ${{ variables.backendAzureRmResourceGroupName }}
                backendAzureRmStorageAccountName: ${{ variables.backendAzureRmStorageAccountName }}
                environmentName: ${{ variables.prodEnvironmentName }}
                globalTerraformVariableFilename: ${{ variables.globalTerraformVariableFilename }}
                pathToTerraformDirectory: ${{ variables.pathToTerraformDirectory }}
                pathToTerraformVariableDirectory: ${{ variables.pathToTerraformVariableDirectory }}
                serviceConnectionName: ${{ variables.serviceConnectionName }}
                webAppProjectName: ${{ variables.webAppProjectName }}