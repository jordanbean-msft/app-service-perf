name: WebApp 
variables:
  - template: env/global.yml
  - template: env/dev.yml
  - template: env/test.yml
  - template: env/prod.yml
  - template: variables.yml
    parameters:
      terraformDirectoryName: ${{ variables.terraformDirectoryName }}
      terraformEnvironmentVariablesDirectoryName: ${{ variables.terraformEnvironmentVariablesDirectoryName }}
      terraformWebAppDirectoryName: ${{ variables.terraformWebAppDirectoryName }}
      webAppProjectName: ${{ variables.webAppProjectName }}
      webAppSolutionName: ${{ variables.webAppSolutionName }}
trigger:
  - main
stages:
  - stage: Build
    jobs:
      - job: Build
        pool:
          vmImage: ubuntu-latest
        steps:
          - template: build.yml
            parameters:
              artifactName: ${{ variables.artifactName }}
              configuration: ${{ variables.configuration }}
              pathToWebAppProjectDirectory: ${{ variables.pathToWebAppProjectDirectory }}
              webAppProjectName: ${{ variables.webAppProjectName }}

  - stage: Dev
    dependsOn: Build
    jobs:
    - deployment: Dev_Deploy
      pool:
        vmImage: ubuntu-latest
      environment: ${{ variables.devEnvironmentName }}
      variables:
        - group: ${{ variables.webAppSolutionName }}-KeyVault-${{ variables.devEnvironmentName }}
        - name: TF_VAR_KEYVAULTNAME
          value: ${{ variables.devKeyVaultName }} 
        - name: TF_VAR_RESOURCEGROUPNAME
          value: ${{ variables.devResourceGroupName }} 
        - name: TF_VAR_APPSERVICESUBNETNAME
          value: ${{ variables.devAppServiceSubnetName }} 
        - name: TF_VAR_VNETNAME
          value: ${{ variables.devvNetName }} 
        - name: ARM_SUBSCRIPTION_ID
          value: ${{ variables.subscriptionId }}
        - name: ARM_TENANT_ID
          value: ${{ variables.tenantId }}
      strategy:
        runOnce:
          deploy:
            steps:
            - template: deploy.yml
              parameters:
                artifactName: ${{ variables.artifactName }}
                environmentName: ${{ variables.devEnvironmentName }}
                globalTerraformVariableFilename: ${{ variables.globalTerraformVariableFilename }}
                pathToTerraformDirectory: ${{ variables.pathToTerraformWebAppDirectory }}
                pathToTerraformEnvironmentVariablesDirectory: ${{ variables.pathToTerraformEnvironmentVariablesDirectory }}
                serviceConnectionName: ${{ variables.serviceConnectionName }}
                webAppProjectName: ${{ variables.webAppProjectName }}
    - job: waitForValidation
      displayName: Wait for validation
      dependsOn: Dev_Deploy
      pool: server
      timeoutInMinutes: 4320 # job times out in 3 days
      steps:
      - task: ManualValidation@0
        timeoutInMinutes: 1440 # task times out in 1 day
        inputs:
          instructions: 'Please validate the deployment and resume'
          onTimeout: reject
  - stage: Test
    dependsOn: Dev
    jobs:
    - deployment: Test_Deploy
      pool:
        vmImage: ubuntu-latest
      environment: ${{ variables.testEnvironmentName }}
      variables:
        - group: ${{ variables.webAppSolutionName }}-KeyVault-${{ variables.testEnvironmentName }}
        - name: TF_VAR_KEYVAULTNAME
          value: ${{ variables.testKeyVaultName }} 
        - name: TF_VAR_RESOURCEGROUPNAME
          value: ${{ variables.testResourceGroupName }} 
        - name: TF_VAR_APPSERVICESUBNETNAME
          value: ${{ variables.testAppServiceSubnetName }} 
        - name: TF_VAR_VNETNAME
          value: ${{ variables.testvNetName }} 
        - name: ARM_SUBSCRIPTION_ID
          value: ${{ variables.subscriptionId }}
        - name: ARM_TENANT_ID
          value: ${{ variables.tenantId }}
      strategy:
        runOnce:
          deploy:
            steps:
            - template: deploy.yml
              parameters:
                artifactName: ${{ variables.artifactName }}
                environmentName: ${{ variables.testEnvironmentName }}
                globalTerraformVariableFilename: ${{ variables.globalTerraformVariableFilename }}
                pathToTerraformDirectory: ${{ variables.pathToTerraformWebAppDirectory }}
                pathToTerraformEnvironmentVariablesDirectory: ${{ variables.pathToTerraformEnvironmentVariablesDirectory }}
                serviceConnectionName: ${{ variables.serviceConnectionName }}
                webAppProjectName: ${{ variables.webAppProjectName }}
    - job: waitForValidation
      displayName: Wait for validation
      dependsOn: Test_Deploy
      pool: server
      timeoutInMinutes: 4320 # job times out in 3 days
      steps:
      - task: ManualValidation@0
        timeoutInMinutes: 1440 # task times out in 1 day
        inputs:
          instructions: 'Please validate the deployment and resume'
          onTimeout: reject
  - stage: Prod
    dependsOn: Test
    jobs:
    - deployment: Prod_Deploy
      pool:
        vmImage: ubuntu-latest
      environment: ${{ variables.prodEnvironmentName }}
      variables:
        - group: ${{ variables.webAppSolutionName }}-KeyVault-${{ variables.prodEnvironmentName }}
        - name: TF_VAR_KEYVAULTNAME
          value: ${{ variables.prodKeyVaultName }} 
        - name: TF_VAR_RESOURCEGROUPNAME
          value: ${{ variables.prodResourceGroupName }} 
        - name: TF_VAR_APPSERVICESUBNETNAME
          value: ${{ variables.prodAppServiceSubnetName }} 
        - name: TF_VAR_VNETNAME
          value: ${{ variables.prodvNetName }} 
        - name: ARM_SUBSCRIPTION_ID
          value: ${{ variables.subscriptionId }}
        - name: ARM_TENANT_ID
          value: ${{ variables.tenantId }}
      strategy:
        runOnce:
          deploy:
            steps:
            - template: deploy.yml
              parameters:
                artifactName: ${{ variables.artifactName }}
                environmentName: ${{ variables.prodEnvironmentName }}
                globalTerraformVariableFilename: ${{ variables.globalTerraformVariableFilename }}
                pathToTerraformDirectory: ${{ variables.pathToTerraformWebAppDirectory }}
                pathToTerraformEnvironmentVariablesDirectory: ${{ variables.pathToTerraformEnvironmentVariablesDirectory }}
                serviceConnectionName: ${{ variables.serviceConnectionName }}
                webAppProjectName: ${{ variables.webAppProjectName }}