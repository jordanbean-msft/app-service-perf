name: BuildRelease

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['5.0.x']
    defaults:
      run:
        working-directory: ./AppServicePerf
    env:
      CONFIGURATION: Debug
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Print environment variables
        run: env | sort
      - name: Print directory tree
        run: tree
      - name: Setup .Net Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration ${{ env.CONFIGURATION }} --no-restore
      - name: Test
        run: dotnet test --no-restore --verbosity normal
      - name: Publish
        run: dotnet publish -c ${{ env.CONFIGURATION }}
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          path: ${{ github.workspace }}/AppServicePerf/AppServicePerf/bin/${{ env.CONFIGURATION }}/net5.0/publish

  release-infrastructure:
    name: Release-Infrastructure
    needs: build
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      TF_VAR_sqlServerAdminUsername: ${{ secrets.TF_VAR_sqlServerAdminUsername }}
      TF_VAR_sqlServerAdminPassword: ${{ secrets.TF_VAR_sqlServerAdminPassword }}
      TF_VAR_azureAdAdminObjectId: ${{ secrets.TF_VAR_azureAdAdminObjectId }}
      TF_VAR_webAppClientId: ${{ secrets.WEB_APP_CLIENT_ID }}
      TF_VAR_webAppClientSecret: ${{ secrets.WEB_APP_CLIENT_SECRET }}
      TF_VAR_webAppDomain: ${{ secrets.WEB_APP_DOMAIN }}
      TF_VAR_webAppTenantId: ${{ secrets.AZURE_AD_TENANT_ID }}
      TF_VAR_githubActionsObjectId: ${{ secrets.TF_VAR_githubActionsObjectId }}
      environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Print environment variables
        run: env | sort
      - name: Print directory tree
        run: tree
      - name: Terraform Format
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.14.8
          tf_actions_subcommand: fmt
          tf_actions_working_dir: terraform/.
      - name: Terraform Init
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.14.8
          tf_actions_subcommand: init
          tf_actions_working_dir: terraform/.
      - name: Terraform Validate
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.14.8
          tf_actions_subcommand: validate
          tf_actions_working_dir: terraform/.
      - name: Terraform Plan
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.14.8
          tf_actions_subcommand: plan
          tf_actions_working_dir: terraform/.
          args: '-var-file=environments/${{ env.environment }}.tfvars'
      - name: Terraform Apply
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.14.8
          tf_actions_subcommand: apply
          args: '-var-file=environments/${{ env.environment }}.tfvars'
          tf_actions_working_dir: terraform/.
      - name: 'Terraform Output'
        id: terraform_output
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.14.8 
          tf_actions_subcommand: output
          tf_actions_working_dir: terraform/.
      - name: Outputs
        id: output
        run: |
          export APPSERVICENAME=$(echo '${{ steps.terraform_output.outputs.tf_actions_output }}' | jq -r '.appServiceName.value')
          echo "::set-output name=appServiceName::${APPSERVICENAME}"
    outputs:
      appServiceName: ${{ steps.output.outputs.appServiceName }}

  release-webApp:
    name: Release-WebApp
    needs: release-infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download artifact
        uses: actions/download-artifact@v2
      - name: Print environment variables
        run: env | sort
      - name: Print directory tree
        run: tree
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy WebApp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ needs.release-infrastructure.outputs.appServiceName }}
          package: artifact
